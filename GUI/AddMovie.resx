<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>